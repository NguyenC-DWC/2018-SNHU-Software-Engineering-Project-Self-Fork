<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountLogin" xml:space="preserve">
    <value>Connexion au compte</value>
  </data>
  <data name="Accounts" xml:space="preserve">
    <value>Comptes</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Ajouter</value>
  </data>
  <data name="AddTransaction" xml:space="preserve">
    <value>Ajouter une transaction</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Montant</value>
  </data>
  <data name="Balance" xml:space="preserve">
    <value>Équilibre:</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Catégorie</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirmer</value>
  </data>
  <data name="ConfirmDelete" xml:space="preserve">
    <value>Êtes-vous sûr de vouloir supprimer la transaction en cours de la liste?</value>
  </data>
  <data name="ConfirmEdits" xml:space="preserve">
    <value>Voulez-vous confirmer les modifications apportées à la transaction en cours?</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirmez le mot de passe</value>
  </data>
  <data name="ConfirmQuestion" xml:space="preserve">
    <value>Confirmer?</value>
  </data>
  <data name="CreateAccount" xml:space="preserve">
    <value>Créer un compte</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Rendez-vous amoureux</value>
  </data>
  <data name="DateOfTransaction" xml:space="preserve">
    <value>Date de la transaction:</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Effacer</value>
  </data>
  <data name="Deposit" xml:space="preserve">
    <value>Dépôt</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>La description</value>
  </data>
  <data name="EditTransaction" xml:space="preserve">
    <value>Modifier la transaction</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Fees" xml:space="preserve">
    <value>Honoraires</value>
  </data>
  <data name="FinanceManagement" xml:space="preserve">
    <value>Gestion des finances</value>
  </data>
  <data name="ForgotPassword" xml:space="preserve">
    <value>Mot de passe oublié?</value>
  </data>
  <data name="Groceries" xml:space="preserve">
    <value>Les courses</value>
  </data>
  <data name="Housing" xml:space="preserve">
    <value>Logement</value>
  </data>
  <data name="IncorrectFormat" xml:space="preserve">
    <value>Format incorrect du montant en argent. Maximum de 999 $ et deux chiffres après la décimale.</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Email invalide</value>
  </data>
  <data name="InvalidPassword" xml:space="preserve">
    <value>Mot de passe incorrect</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Chargement...</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>S'identifier</value>
  </data>
  <data name="NewRegister" xml:space="preserve">
    <value>Nouveau? Inscrivez-vous ici</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Non</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Aucun</value>
  </data>
  <data name="OldPass" xml:space="preserve">
    <value>Ancien mot de passe:</value>
  </data>
  <data name="OldUser" xml:space="preserve">
    <value>Ancien nom d'utilisateur:</value>
  </data>
  <data name="OR" xml:space="preserve">
    <value>OU</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Mot de passe</value>
  </data>
  <data name="PasswordsNotMatch" xml:space="preserve">
    <value>Les mots de passe ne correspondent pas.</value>
  </data>
  <data name="PasswordValidCheck" xml:space="preserve">
    <value>Doit être huit ou plus caractères.
Doit contenir un caractère spécial.
Doit contenir une capitale.
Maximum de quinze caractères.</value>
  </data>
  <data name="SpecifyAmount" xml:space="preserve">
    <value>Veuillez préciser le montant d'argent retiré ou déposé.</value>
  </data>
  <data name="SpecifyDate" xml:space="preserve">
    <value>Veuillez spécifier la date de la transaction.</value>
  </data>
  <data name="SpecifyDetails" xml:space="preserve">
    <value>Veuillez spécifier les détails de la transaction.</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Soumettre</value>
  </data>
  <data name="TransactionAmount" xml:space="preserve">
    <value>Montant de la transaction:</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="TypeOfTransaction" xml:space="preserve">
    <value>Type de transaction:</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>Nom d'utilisateur</value>
  </data>
  <data name="Utility" xml:space="preserve">
    <value>Utilitaire</value>
  </data>
  <data name="Withdrawal" xml:space="preserve">
    <value>Retrait</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Oui</value>
  </data>
  <data name="ChangeAccount" xml:space="preserve">
    <value>Changer les informations du compte</value>
  </data>
  <data name="CategoryColon" xml:space="preserve">
    <value>Catégorie:</value>
  </data>
  <data name="CompleteTransaction" xml:space="preserve">
    <value>Veuillez compléter la transaction en cours que vous souhaitez ajouter ou modifier.</value>
  </data>
  <data name="DescriptionColon" xml:space="preserve">
    <value>La description:</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>€</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filtrer par catégorie:</value>
  </data>
  <data name="Checking" xml:space="preserve">
    <value>Vérification</value>
  </data>
  <data name="Savings" xml:space="preserve">
    <value>Des économies</value>
  </data>
  <data name="Check" xml:space="preserve">
    <value>chèque</value>
  </data>
  <data name="Debit" xml:space="preserve">
    <value>débit</value>
  </data>
  <data name="Transfer" xml:space="preserve">
    <value>transfert</value>
  </data>
  <data name="AccountLoginTitle" xml:space="preserve">
    <value>Directeur financier v1.0</value>
  </data>
  <data name="Merchant" xml:space="preserve">
    <value>Marchande</value>
  </data>
  <data name="MerchantColon" xml:space="preserve">
    <value>Marchande:</value>
  </data>
  <data name="Transactions" xml:space="preserve">
    <value>Transactions</value>
  </data>
</root>